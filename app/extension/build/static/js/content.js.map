{"version":3,"file":"static/js/content.js","mappings":"yBAAO,IAAKA,GAGX,SAHWA,GAAAA,EAAAA,EAAM,iBAANA,EAAAA,EAAM,qBAGjB,CAHWA,IAAAA,EAAM,KCKlB,IAOMC,EAA+B,SACnCC,EACAC,EACAC,GAGA,IAAMC,EAbe,SACrBH,EACAC,GAEA,OAAOA,EAAOG,KAAOC,OAAOC,QAAQF,IAAMJ,EAAQO,OAAST,EAAOU,KACpE,CAQsBC,CAAeT,EAASC,GAM5C,GAJIE,GAAmC,qBAApBH,EAAQA,SACzBE,EAAS,yBAGPC,GAAmC,gBAApBH,EAAQA,QAA2B,CAAC,IAAD,EAC9CU,EAAOC,SAASC,eAAe,UACjC,OAAJF,QAAI,IAAJA,GAAmB,QAAf,EAAJA,EAAMG,qBAAa,OAAnB,EAAqBC,YAAYJ,EACnC,CACF,EAGEK,QAAQC,IAAI,qBAIZX,OAAOC,QAAQW,UAAUC,YAAYnB,E","sources":["types.ts","chrome/content.ts"],"sourcesContent":["export enum Sender {\n    React,\n    Content\n}\n\nexport interface ChromeMessage {\n    from: Sender,\n    message: any\n}","\nimport { ChromeMessage, Sender } from \"../types\";\n\ntype MessageResponse = (response?: any) => void\n\nconst validateSender = (\n  message: ChromeMessage,\n  sender: chrome.runtime.MessageSender\n) => {\n  return sender.id === chrome.runtime.id && message.from === Sender.React;\n}\n\nconst messagesFromReactAppListener = (\n  message: ChromeMessage,\n  sender: chrome.runtime.MessageSender,\n  response: MessageResponse\n) => {\n\n  const isValidated = validateSender(message, sender);\n\n  if (isValidated && message.message === 'Hello from React') {\n    response('Hello from content.js');\n  }\n\n  if (isValidated && message.message === \"delete logo\") {\n    const logo = document.getElementById('hplogo');\n    logo?.parentElement?.removeChild(logo)\n  }\n}\n\nconst main = () => {\n  console.log('[content.ts] Main')\n  /**\n   * Fired when a message is sent from either an extension process or a content script.\n   */\n  chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\n}\n\nmain();\n"],"names":["Sender","messagesFromReactAppListener","message","sender","response","isValidated","id","chrome","runtime","from","React","validateSender","logo","document","getElementById","parentElement","removeChild","console","log","onMessage","addListener"],"sourceRoot":""}